{"version":3,"sources":["enum.ts","util.ts","shared/useLocalStrage.ts","App/AppStore.tsx","component/Transition.tsx","component/RandomEmoji.tsx","view/frontPage/FrontPage.tsx","view/join/Join.tsx","component/Loading.tsx","infrastructure/api.ts","component/Advertisement.tsx","view/create/Create.tsx","view/room/createResult/CreateResult.tsx","component/LocalVideo.tsx","view/room/joinRoom/JoinRoom.tsx","component/RemoteVideo.tsx","infrastructure/message.ts","infrastructure/WebRTCUtil.ts","infrastructure/ErrorHandler.ts","view/room/Room.tsx","view/AppRoot.tsx","App/index.tsx","index.tsx"],"names":["ROOM_TYPE","ERRORS","noop","throwError","e","useLocalStrage","key","initValueFunc","useState","localStorage","getItem","value","setValue","useEffect","removeItem","setItem","appContext","createContext","roomCode","connectionId","clientId","setRoomCode","setConnectionId","setClientId","AppStore","children","uuidv4","Provider","direction","TOP","Symbol","RIGHT","BOTTOM","LEFT","TransitionSwitch","on","off","onRef","useRef","offRef","current","Popup","path","exact","from","disableOnFirst","transition","isOn","setOn","ref","shouldBeOnRef","isPresent","setPresent","isOnRef","transitionendListener","container","addEventListener","removeEventListener","offsetWidth","className","description","style","smilyAndPeople","getRandomEmoji","Math","floor","random","length","RandomEmoji","interval","emoji","setEmoji","intervalIndex","setInterval","clearInterval","FrontPage","to","Join","history","useHistory","code","setCode","isFocused","setFocused","inputRef","push","type","inputMode","opacity","zIndex","position","onFocus","onBlur","onKeyDown","keyCode","preventDefault","onChange","target","slice","blur","Array","fill","map","_","i","onClick","focus","Loading","tag","Tag","isLoading","bound","REST_API_URL","api","fetchRoom","a","password","axios","post","data","createRoom","roomPassword","roomType","Advertisement","Create","useContext","setPassword","isCreatingRoom","setCreatingRoom","formSubmit","Object","fromEntries","FormData","entries","Error","toString","onSubmit","id","name","VIDEO","defaultChecked","htmlFor","AUDIO","disabled","placeholder","CreateResult","visible","onEnter","roomURL","window","location","protocol","hostname","port","process","copyURL","copy","alert","classNames","readOnly","navigator","share","title","document","url","LocalVideo","onLoad","muted","videoRef","mediaStream","onLoadref","loaded","setLoaded","initVideo","useCallback","videoElement","mediaDevices","getUserMedia","video","audio","srcObject","Promise","resolve","once","getTracks","forEach","track","stop","autoPlay","playsInline","transform","JoinRoom","needPassword","passwordError","passwordInputRef","required","RemoteVideo","loading","WEB_SOCKET_API_URL","socket","WebSocket","NoConnectionIdError","message","waitForConnected","sendMessage","payload","JSON","stringify","send","onMessage","callback","listener","parse","getConnectionId","WebRTCUtil","remoteConnectionId","iceServerUrls","onConnect","onDisconnect","onFail","onError","listeningCancelers","options","rtcPeerConnection","localMediaStream","remoteMediaStream","this","MediaStream","RTCPeerConnection","iceServers","urls","sendOffer","waitStable","addTrack","candidate","sendIceCandidate","connectionState","candidateInit","addIceCandidate","RTCIceCandidate","descriptionInit","rtcSessionDescription","RTCSessionDescription","setRemoteDescription","sendAnswer","signalingState","createAnswer","rtcSessionDescriptionInit","setLocalDescription","createOffer","iceRestart","sort","b","kind","canceler","pop","close","handleError","console","error","getRemoteConnectionId","room","localClientId","members","filter","Room","useLocation","setPasswordError","isPrivateRoom","setPrivateRoom","isLocalVideoLoaded","setLocalVideoLoaded","isRemoteVideoLoaded","setRemoteVideoLoaded","isRoomFetching","setRoomFetching","isRoomOpener","setIsRoomOpener","isConnected","setIsConnected","setRemoteConnectionId","setLocalMediaStream","useQueryString","replace","isEntered","_setEntered","setEntered","webRTCUtil","setWebRTCUtil","webRTCUtilIntance","destroy","intervalId","addLocalMediaStream","connect","catch","log","response","ROOM_IS_FULL","status","setTimeout","entered","CodeHeader","transparent","back","useParams","Header","CodeSetter","AppRoot","then","basename","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ee740ec.chunk.js","sourcesContent":["export enum ROOM_TYPE {\n  VIDEO = 'VIDEO',\n  AUDIO = 'AUDIO'\n}\n\nexport enum ERRORS {\n  ROOM_IS_FULL = 'ROOM_IS_FULL'\n}","export const invoke = (func: () => any) => func()\n\nexport const noop = () => {\n}\n\nexport const throwError = (e: Error) => {\n  throw e\n};\n\n","import {Dispatch, SetStateAction, useEffect, useState} from \"react\";\n\nconst useLocalStrage = (key: string, initValueFunc:() => string): [string, Dispatch<SetStateAction<string>>] => {\n  const [value, setValue] = useState<string>(localStorage.getItem(key) || initValueFunc());\n\n  useEffect(() => {\n    if (value === null) {\n      localStorage.removeItem(key)\n    } else {\n      localStorage.setItem(key, value)\n    }\n  }, [key, value])\n\n  return [value, setValue];\n}\nexport default useLocalStrage","import React, {createContext, Dispatch, ReactNode, SetStateAction, useState} from 'react';\nimport {noop} from \"../util\";\nimport useLocalStrage from \"../shared/useLocalStrage\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport interface AppContext {\n  roomCode: string | null,\n  connectionId: string | null,\n  clientId: string,\n  setRoomCode: Dispatch<SetStateAction<string | null>>\n  setConnectionId: Dispatch<SetStateAction<string | null>>\n  setClientId: Dispatch<SetStateAction<string>>,\n}\n\nexport const appContext = createContext<AppContext>({\n  roomCode: null,\n  connectionId: null,\n  clientId: '',\n  setRoomCode: noop,\n  setConnectionId: noop,\n  setClientId: noop,\n});\n\nconst AppStore = ({children}: { children: ReactNode }) => {\n  const [roomCode, setRoomCode] = useState<string | null>(null)\n  const [connectionId, setConnectionId] = useState<string | null>(null)\n  const [clientId, setClientId] = useLocalStrage('clientId', uuidv4);\n\n  return (\n    <appContext.Provider value={{\n      roomCode, setRoomCode,\n      connectionId, setConnectionId,\n      clientId, setClientId\n    }}>\n      {children}\n    </appContext.Provider>\n  );\n};\n\nexport default AppStore;","import React, {useEffect, useRef, useState} from \"react\"\nimport {Route} from \"react-router-dom\"\nimport './transition.scss'\n\nexport const direction = {\n  TOP: Symbol('top'),\n  RIGHT: Symbol('right'),\n  BOTTOM: Symbol('bottom'),\n  LEFT: Symbol('left'),\n}\n\nconst TransitionSwitch = ({on, off}: { on: () => void, off: () => void }) => {\n  const onRef = useRef(on);\n  const offRef = useRef(off);\n\n  useEffect(() => {\n    onRef.current = on\n  }, [on])\n\n  useEffect(() => {\n    offRef.current = off\n  }, [off])\n\n  useEffect(() => {\n    onRef.current()\n    return offRef.current\n  }, [])\n  return null\n}\n\ntype PopupProps = {\n  path: string,\n  exact?: boolean,\n  from: Symbol,\n  disableOnFirst?: boolean,\n  transition?: string,\n  children: React.ReactNode\n};\n\nexport const Popup = ({path, exact, from, disableOnFirst = false, transition = '.3s', children}: PopupProps) => {\n  const [isOn, setOn] = useState(disableOnFirst)\n  const ref = useRef<HTMLDivElement>(null)\n  const shouldBeOnRef = useRef<boolean>(false)\n  const [isPresent, setPresent] = useState(disableOnFirst)\n\n  const isOnRef = useRef<boolean>(isOn)\n  useEffect(() => {\n    isOnRef.current = isOn\n  }, [isOn])\n\n  useEffect(() => {\n    if (ref.current == null) return\n\n    const transitionendListener = () => {\n      if (!isOnRef.current) setPresent(false)\n    }\n    const container = ref.current\n\n    container.addEventListener('transitionend', transitionendListener)\n    return () => container.removeEventListener('transitionend', transitionendListener)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref.current])\n\n\n  useEffect(() => {\n    if (isPresent && ref.current != null && shouldBeOnRef.current) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const causeReflow = ref.current.offsetWidth; // do not remove : trick for transition start\n      setOn(true);\n      shouldBeOnRef.current = false;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPresent, ref.current])\n\n  return (\n    <>\n      <Route path={path} exact={exact}>\n        <TransitionSwitch\n          on={() => {\n            setPresent(true);\n            shouldBeOnRef.current = true;\n          }}\n          off={() => setOn(false)}/>\n      </Route>\n      {isPresent && (\n        <div ref={ref} className={`transition popup ${isOn ? 'on' : from.description}`}\n             style={{transition: transition}}>\n          {children}\n        </div>)}\n    </>\n  )\n}\n","import React, {useEffect, useState} from 'react';\n\nconst smilyAndPeople = [\n  \"😀\", \"😃\", \"😄\", \"😁\", \"😆\", \"😅\", \"😂\", \"🤣\", \"☺️\", \"😊\", \"😇\", \"🙂\", \"🙃\", \"😉\", \"😌\", \"😍\", \"😘\", \"😗\", \"😙\",\n  \"😚\", \"😋\", \"😜\", \"😝\", \"😛\", \"🤑\", \"🤗\", \"🤓\", \"😎\", \"🤡\", \"🤠\", \"😏\", \"😒\", \"😞\", \"😔\", \"😟\", \"😕\", \"🙁\",\n  \"😣\", \"😖\", \"😫\", \"😩\", \"😤\", \"😠\", \"😡\", \"😶\", \"😐\", \"😑\", \"😯\", \"😦\", \"😧\", \"😮\", \"😲\", \"😵\", \"😳\", \"😱\", \"😨\",\n  \"😰\", \"😢\", \"😥\", \"🤤\", \"😭\", \"😓\", \"😪\", \"😴\", \"🙄\", \"🤔\", \"🤥\", \"😬\", \"🤐\", \"🤢\", \"🤧\", \"😷\", \"🤒\", \"🤕\",\n  \"😈\", \"👿\", \"👹\", \"👺\", \"💩\", \"👻\", \"💀\", \"☠️\", \"👽\", \"👾\", \"🤖\", \"🎃\", \"😺\", \"😸\", \"😹\", \"😻\", \"😼\", \"😽\", \"🙀\",\n  \"😿\", \"😾\"]\n\nconst getRandomEmoji = () => smilyAndPeople[Math.floor(Math.random() * smilyAndPeople.length)];\n\nconst RandomEmoji = ({interval = 500}: { interval?: number }) => {\n  const [emoji, setEmoji] = useState(getRandomEmoji());\n  useEffect(() => {\n    const intervalIndex = setInterval(() => setEmoji(getRandomEmoji()), interval);\n    return () => clearInterval(intervalIndex)\n  })\n  return <>{emoji}</>;\n};\n\nexport default RandomEmoji;","import React from 'react'\nimport {Link} from \"react-router-dom\"\nimport './FrontPage.scss'\nimport RandomEmoji from \"../../component/RandomEmoji\";\n\nconst FrontPage = () => (\n  <section className=\"frontpage\">\n    <main>\n      <div className=\"banner\">\n        <RandomEmoji interval={800}/>\n        &nbsp;💻&nbsp;⇆📱&nbsp;\n        <RandomEmoji interval={900}/>\n      </div>\n      <Link to=\"./join\" className=\"button big join\">\n        <span className=\"icon\">🔑</span>\n        참여하기\n      </Link><br/>\n      <Link to=\"./create\" className=\"button big create\">\n        <span className=\"icon\">🔨</span>\n        만들기\n      </Link>\n    </main>\n  </section>\n)\n\nexport default FrontPage","import React, {useEffect, useRef, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport './Join.scss'\n\nconst MAX_LENGTH = 6;\n\nconst Join = () => {\n  const history = useHistory();\n  const [code, setCode] = useState(\"\");\n  const [isFocused, setFocused] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (code.length >= 6) history.push(`/${code}`)\n  }, [code, history])\n\n  return (\n    <section className=\"join\">\n      <main>\n        <label className={`inputs ${isFocused ? 'focus' : ''}`}>\n          <input ref={inputRef} type=\"number\"\n                 inputMode=\"numeric\"\n                 value={code}\n                 style={{opacity: 0, zIndex: -1, position: \"absolute\"}}\n                 onFocus={() => setFocused(true)}\n                 onBlur={() => setFocused(false)}\n                 onKeyDown={e => {\n                   if (e.keyCode !== 8 && !(48 <= e.keyCode && e.keyCode <= 57)) {\n                     e.preventDefault();\n                   }\n                 }}\n                 onChange={e => {\n                   setCode(`${e.target.value}`.slice(0, MAX_LENGTH));\n                   if (e.target.value.length >= MAX_LENGTH) {\n                     inputRef?.current?.blur()\n                   }\n                 }}/>\n          {new Array(MAX_LENGTH).fill(null)\n            .map((_, i) =>\n              <span key={i} className={`individual-number ${code.length === i ? 'last' : ''}`}\n                    onClick={() => inputRef?.current?.focus()}>{code[i] || ' '}</span>\n            )}\n        </label>\n      </main>\n    </section>\n  );\n};\n\nexport default Join;","import React from 'react';\nimport './Loading.scss'\n\ntype LoadingProps = {\n  tag?: keyof JSX.IntrinsicElements,\n  isLoading: boolean,\n  bound?: boolean,\n  children: React.ReactNode,\n  className?: string,\n  style?: React.CSSProperties,\n};\n\nconst Loading = ({tag: Tag = 'div', isLoading, bound = false, className = '', style, children}: LoadingProps) => {\n  return (\n    <Tag className={`loading-container ${className}`}\n         style={{...style, ...bound ? {position: 'relative'} : {}}}>\n      {children}\n      {isLoading && <div className=\"spinner\"/>}\n    </Tag>\n  );\n};\n\nexport default Loading;","import axios from \"axios\";\nimport {ROOM_TYPE} from \"../enum\";\n\nconst API_ID = '9l5iwnfzf8';\nconst REGION = 'ap-northeast-2';\nconst STAGE = 'Prod';\nconst REST_API_URL = `https://${API_ID}.execute-api.${REGION}.amazonaws.com/${STAGE}`;\n\nexport interface RoomResponse {\n  roomType: ROOM_TYPE,\n  members: { [clientId: string]: string }\n}\n\nexport interface CreateRoomRequest {\n  roomType: ROOM_TYPE,\n  roomPassword: string\n  connectionId: string\n  clientId: string\n}\n\nexport const api = {\n  fetchRoom: async ({roomCode, clientId, password, connectionId}: {\n    roomCode: string,\n    clientId: string | null,\n    connectionId: string,\n    password?: string\n  }): Promise<RoomResponse> => {\n    const {data} = await axios.post(`${REST_API_URL}/room/${roomCode}`, {password, clientId, connectionId});\n    return data;\n  },\n  async createRoom({roomPassword, roomType, connectionId, clientId}: CreateRoomRequest) {\n    const {data: roomCode} = await axios.post(`${REST_API_URL}/room`, {roomPassword, roomType, connectionId, clientId});\n    return {roomCode};\n  },\n}\n\n","import React from 'react';\nimport './Advertizement.scss'\n\nconst Advertisement = () => {\n  return (\n    <div className=\"advertisement\">\n      광고영역\n    </div>\n  );\n};\n\nexport default Advertisement;","import React, {SyntheticEvent, useContext, useState} from 'react';\nimport './Create.scss'\nimport Loading from \"../../component/Loading\";\nimport {api} from \"../../infrastructure/api\";\nimport Advertisement from \"../../component/Advertisement\";\nimport {useHistory} from 'react-router-dom';\nimport {appContext} from \"../../App/AppStore\";\nimport {ROOM_TYPE} from \"../../enum\";\n\nconst Create = () => {\n  const {connectionId, clientId} = useContext(appContext);\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [isCreatingRoom, setCreatingRoom] = useState(false);\n  const formSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n    setCreatingRoom(true)\n    try {\n      const {roomPassword, roomType} = Object.fromEntries<FormDataEntryValue>(\n        new FormData(e.target as HTMLFormElement).entries()\n      );\n      if(connectionId == null){\n        throw new Error(\"no connection id.\");\n      }\n      const {roomCode} = await api.createRoom({\n        clientId,\n        connectionId,\n        roomPassword: roomPassword.toString(),\n        roomType : roomType as ROOM_TYPE,\n      });\n      history.push(`/${roomCode}`);\n    } finally {\n      setCreatingRoom(false);\n    }\n  };\n\n  return <>\n    <section className=\"create\">\n      <Loading tag=\"main\" isLoading={isCreatingRoom}>\n        <form className=\"controls\" onSubmit={formSubmit}>\n          <label>\n            통화 타입\n          </label>\n          <div className=\"control-group\">\n            <div className=\"flex-1\">\n              <input id=\"room-type-audio\" className=\"control\" type=\"radio\" name=\"roomType\" value={ROOM_TYPE.VIDEO}\n                     defaultChecked/>\n              <label htmlFor=\"room-type-audio\">영상</label>\n            </div>\n            <div className=\"flex-1\">\n              <input id=\"room-type-video\" className=\"control\" type=\"radio\" name=\"roomType\" value={ROOM_TYPE.AUDIO}\n                     disabled/>\n              <label htmlFor=\"room-type-video\">음성</label>\n            </div>\n          </div>\n          <label htmlFor=\"room-password\">입장 비밀번호</label>\n          <input id=\"room-password\" type=\"password\" name=\"roomPassword\" className=\"input big control password\"\n                 placeholder=\"없음\"\n                 value={password} onChange={e => setPassword(e.target.value)}/>\n          <button type=\"submit\" className=\"button big control enter\">\n            <span className=\"icon\">✨</span>만들기\n          </button>\n        </form>\n      </Loading>\n      <footer>\n        <Advertisement/>\n      </footer>\n    </section>\n  </>;\n};\n\nexport default Create;","import React, {useContext} from 'react';\nimport './CreateResult.scss'\nimport {appContext} from \"../../../App/AppStore\";\nimport copy from \"clipboard-copy\";\nimport classNames from \"classnames\";\n\nconst getAppRootURL = () => `${window.location.protocol}//${window.location.hostname}${window.location.port ? \":\" : \"\"}${window.location.port}${process.env.REACT_APP_BASENAME}`;\n\nconst CreateResult = ({visible, onEnter}: { visible: boolean, onEnter: () => void }) => {\n  const {roomCode} = useContext(appContext);\n  const roomURL = `${getAppRootURL()}${roomCode}`;\n  const copyURL = async () => {\n    await copy(roomURL);\n    alert(\"클립보드로 복사되었습니다.\")\n  };\n  const shareURL = () => navigator.share && navigator.share({title: document.title, url: roomURL});\n\n  return (\n    <div id=\"create-result\" className={classNames(\"controls\", {visible})}>\n      <label htmlFor=\"room-url\">영상통화가 만들어졌습니다.</label>\n      <input id=\"room-url\" type=\"url\" readOnly className=\"input big control\" value={roomURL}/>\n\n      <div className=\"control-group\">\n        <div className=\"flex-col flex-3\">\n          <button className=\"button big control enter\" onClick={copyURL}>\n            복사\n          </button>\n        </div>\n        <div className=\"flex-col flex-3\">\n          <button className=\"button big control enter\" onClick={shareURL}>\n            공유\n          </button>\n        </div>\n        <div className=\"flex-col flex-5\">\n          <button className=\"button big control enter\" onClick={onEnter}>\n            <span className=\"icon\">🚪</span>\n            입장\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateResult;","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport './LocalVideo.scss'\nimport {noop} from \"../util\";\n\ntype LocalVideoProps = { onLoad?: (mediaStream: MediaStream) => void, muted?: boolean };\n\nconst LocalVideo = ({onLoad = noop, muted = false}: LocalVideoProps) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const mediaStream = useRef<MediaStream>();\n  const onLoadref = useRef<(mediaStream: MediaStream) => void>(onLoad);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    onLoadref.current = onLoad\n  }, [onLoad])\n\n  const initVideo = useCallback(async (videoElement: HTMLVideoElement) => {\n    mediaStream.current = await navigator.mediaDevices.getUserMedia({video: true, audio: true})\n    if (videoElement) videoElement.srcObject = mediaStream.current;\n    await new Promise(resolve => videoElement.addEventListener('play', resolve, {once: true}));\n    setLoaded(true)\n    onLoadref.current(mediaStream.current);\n  }, []);\n\n  useEffect(() => {\n    if (videoRef.current) initVideo(videoRef?.current)\n  }, [initVideo])\n\n  useEffect(() => () => {\n    mediaStream?.current?.getTracks()?.forEach((track: MediaStreamTrack) => track.stop());\n  }, [mediaStream])\n\n  return (\n    <div className={`local-video ${loaded ? '' : 'unloaded'}`}>\n      <video autoPlay muted={muted} playsInline ref={videoRef} style={{transform: `rotateY(180deg)`}}/>\n    </div>\n  );\n};\n\nexport default LocalVideo;","import React, {useRef, useState} from 'react';\nimport './JoinRoom.scss'\nimport preventDefault from \"prevent-default\";\nimport classNames from \"classnames\";\n\ntype JoinRoomProps = { visible: boolean, needPassword: boolean, passwordError: boolean, onEnter: (password:string) => void };\n\nconst JoinRoom = ({visible, needPassword, passwordError, onEnter}: JoinRoomProps) => {\n  const [password, setPassword] = useState('');\n  const passwordInputRef = useRef<HTMLInputElement>(null);\n\n  return visible ? (\n    <form id=\"join-room\"\n          className={classNames({\n            'controls': true,\n            'visible': visible,\n            'is-private-room': needPassword,\n          })}\n          onSubmit={preventDefault(() => onEnter(password))}>\n      {needPassword ? <>\n          <label htmlFor=\"room-password\" className={passwordError ? 'error' : ''}>\n            {passwordError ? '올바른 비밀번호를 입력해주세요' : '비밀번호'}\n          </label>\n          <div className=\"control-group\">\n            <input id=\"room-password\" required type=\"password\" className=\"input big control password\"\n                   ref={passwordInputRef} value={password}\n                   onChange={e => setPassword(e.target.value)}/>\n            <button type=\"submit\" className=\"button big control enter\">\n              <span className=\"icon\">🚪</span> 입장\n            </button>\n          </div>\n        </> :\n        <button type=\"submit\" className=\"button big control enter\">\n          <span className=\"icon\">🚪</span> 입장\n        </button>}\n    </form>\n  ) : null;\n};\n\nexport default JoinRoom;","import React, {useEffect, useRef, useState} from 'react';\nimport './LocalVideo.scss'\nimport {noop} from \"../util\";\n\n\ntype RemoteVideoProps = { muted?: boolean, mediaStream: MediaStream | null, loading?: boolean, onLoad: () => void };\n\nconst RemoteVideo = ({mediaStream, loading = false, onLoad = noop, muted = false}: RemoteVideoProps) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const onLoadref = useRef(onLoad);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = mediaStream\n    }\n    setLoaded(true);\n    onLoadref.current();\n  }, [mediaStream])\n\n  return (\n    <div className={`remote-video ${loaded ? '' : 'unloaded'}`}>\n      <video autoPlay muted={muted} playsInline ref={videoRef}\n             style={{transform: `rotateY(180deg)`, opacity: loading ? 0 : 1}}/>\n      {loading && <div className=\"loading\">\n        상대방의 응답을 기다리는 중입니다.\n      </div>}\n    </div>\n  );\n};\n\nexport default RemoteVideo;","const API_ID = `j2wt0t4ra7`;\nconst REGION = `ap-northeast-2`;\nconst STAGE = `production`;\n\nconst WEB_SOCKET_API_URL = `wss://${API_ID}.execute-api.${REGION}.amazonaws.com/${STAGE}/`;\nconst socket = new WebSocket(WEB_SOCKET_API_URL);\n\nexport class NoConnectionIdError implements Error {\n  message: string = 'connection id not set.';\n  name: string = 'NoConnectionIdError';\n}\n\nexport const waitForConnected = new Promise(resolve => socket.addEventListener('open', resolve));\n\nexport const sendMessage = async (connectionId: string | null, type: string, payload: any) => {\n  if (connectionId === null) throw new NoConnectionIdError();\n  await waitForConnected;\n  const data = JSON.stringify({\n    connectionId,\n    message: {\n      type,\n      payload\n    }\n  });\n  socket.send(data);\n};\n\ntype OnMessageCallback = (payload: any, from: string) => void;\n\nexport const onMessage = (type: string, callback: OnMessageCallback) => {\n  const listener = ({data}: { data: string }) => {\n    const {message, from} = JSON.parse(data);\n    if (message == null) return;\n    if (message.type === type) callback(message.payload, from); // 메시지, 상대방의 connectionId를 callback으로 넘겨준다.\n  };\n  socket.addEventListener('message', listener);\n  return () => socket.removeEventListener('message', listener);\n};\n\nexport const getConnectionId = async (): Promise<string> => {\n  await waitForConnected;\n\n  //아무 메시지나 보내서 응답에 있는 connectionId를 promise로 넘겨준다.\n  socket.send('');\n  return new Promise(resolve => {\n    socket.addEventListener('message', e => resolve(JSON.parse(e.data).connectionId), {once: true});\n  });\n};\n","import {onMessage, sendMessage} from \"./message\";\nimport {noop, throwError} from \"../util\";\n\ntype WebRTCUtilOptions = {\n  remoteConnectionId: string | null,\n  iceServerUrls: string[],\n  onConnect: () => void,\n  onDisconnect: () => void,\n  onFail: () => void,\n  onError: (error: Error) => void,\n};\n\ntype WebRTCUtilOptionsOptional = {\n  remoteConnectionId?: string | null,\n  iceServerUrls?: string[],\n  onConnect?: () => void,\n  onDisconnect?: () => void,\n  onFail?: () => void,\n  onError?: (error: Error) => void,\n};\n\nexport class WebRTCUtil {\n  private readonly listeningCancelers: (() => void)[] = []\n  private readonly options: WebRTCUtilOptions\n  private rtcPeerConnection: RTCPeerConnection;\n  private localMediaStream: MediaStream | undefined;\n  remoteMediaStream: MediaStream;\n\n  constructor({\n                remoteConnectionId = null,\n                iceServerUrls = [],\n                onConnect = noop,\n                onDisconnect = noop,\n                onFail = noop,\n                onError = throwError,\n              }: WebRTCUtilOptionsOptional) {\n    this.options = {\n      remoteConnectionId,\n      iceServerUrls,\n      onConnect,\n      onDisconnect,\n      onFail,\n      onError,\n    }\n\n    this.remoteMediaStream = new MediaStream();\n    this.rtcPeerConnection = new RTCPeerConnection({iceServers: [{urls: iceServerUrls}]})\n\n    this.rtcPeerConnection.addEventListener('negotiationneeded', () => this.sendOffer())\n\n    this.rtcPeerConnection.addEventListener('track', async ({track}) => {\n      await this.waitStable()\n      this.remoteMediaStream.addTrack(track)\n    })\n\n    this.rtcPeerConnection.addEventListener('icecandidate', ({candidate}) => {\n      if (candidate != null) return this.sendIceCandidate(candidate)\n    });\n\n    this.rtcPeerConnection.addEventListener('connectionstatechange', () => {\n      switch (this.rtcPeerConnection.connectionState) {\n        case \"connected\":\n          onConnect()\n          break;\n        case \"disconnected\":\n          onDisconnect()\n          break;\n        case \"failed\":\n          onFail()\n          break;\n      }\n    })\n\n    this.listeningCancelers.push(onMessage('ICE', async candidateInit => {\n      if (!candidateInit) return;\n      await this.waitStable();\n      await this.rtcPeerConnection.addIceCandidate(new RTCIceCandidate(candidateInit));\n    }));\n\n    this.listeningCancelers.push(onMessage('SDP', async (descriptionInit, from) => {\n      this.options.remoteConnectionId = from;\n      const rtcSessionDescription = new RTCSessionDescription(descriptionInit);\n      try {\n        await this.rtcPeerConnection.setRemoteDescription(rtcSessionDescription);\n        if (descriptionInit.type === 'offer') {\n          await this.sendAnswer();\n        }\n      } catch (e) {\n        this.options.onError(e);\n      }\n    }))\n  }\n\n  private waitStable() {\n    return new Promise(resolve => {\n      if (this.rtcPeerConnection.signalingState === \"stable\") {\n        return resolve();\n      }\n      this.rtcPeerConnection.addEventListener(\n        'signalingstatechange',\n        () => resolve(this.waitStable()),\n        {once: true}\n      )\n    })\n  }\n\n  private async sendIceCandidate(candidate: RTCIceCandidate) {\n    try {\n      await sendMessage(this.options.remoteConnectionId, 'ICE', candidate);\n    } catch (e) {\n      this.options.onError(e)\n    }\n  }\n\n  private async sendAnswer() {\n    try {\n      const rtcSessionDescriptionInit = await this.rtcPeerConnection.createAnswer();\n      await this.rtcPeerConnection.setLocalDescription(rtcSessionDescriptionInit);\n      await sendMessage(this.options.remoteConnectionId, 'SDP', rtcSessionDescriptionInit);\n    } catch (e) {\n      this.options.onError(e)\n    }\n  }\n\n  private async sendOffer() {\n    if (!this.options.remoteConnectionId) return;\n\n    try {\n      const rtcSessionDescriptionInit = await this.rtcPeerConnection.createOffer({iceRestart: true});\n      await this.rtcPeerConnection.setLocalDescription(rtcSessionDescriptionInit);\n      await sendMessage(this.options.remoteConnectionId, 'SDP', rtcSessionDescriptionInit)\n    } catch (e) {\n      this.options.onError(e)\n    }\n  }\n\n  connect(remoteConnectionId: string) {\n    this.options.remoteConnectionId = remoteConnectionId\n  }\n\n  addLocalMediaStream(mediaStream: MediaStream) {\n    this.localMediaStream = mediaStream;\n    if(this.rtcPeerConnection.signalingState === \"closed\") return;\n    mediaStream.getTracks()\n      .sort((a, b) => a.kind > b.kind ? 1 : -1)\n      .forEach(track => this.rtcPeerConnection.addTrack(track));\n  }\n\n  destroy() {\n    while (this.listeningCancelers.length > 0) {\n      const canceler = this.listeningCancelers.pop();\n      if (canceler) canceler();\n    }\n    this.rtcPeerConnection.close();\n  }\n}","export const handleError = (e: Error) => {\n  console.error(e);\n  alert(\"🙀 오류가 발생하였습니다.\")\n}","import React, {useCallback, useContext, useEffect, useState} from 'react';\n// @ts-ignore\nimport useQueryString from 'use-query-string';\nimport './Room.scss'\nimport Advertisement from '../../component/Advertisement';\nimport {appContext} from \"../../App/AppStore\";\nimport {api, RoomResponse} from \"../../infrastructure/api\";\nimport CreateResult from \"./createResult/CreateResult\";\nimport Loading from \"../../component/Loading\";\nimport LocalVideo from \"../../component/LocalVideo\";\nimport JoinRoom from \"./joinRoom/JoinRoom\";\nimport RemoteVideo from \"../../component/RemoteVideo\";\nimport classNames from \"classnames\";\nimport {WebRTCUtil} from \"../../infrastructure/WebRTCUtil\";\nimport {handleError} from \"../../infrastructure/ErrorHandler\";\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {ERRORS} from '../../enum';\n\nconst getRemoteConnectionId = (room: RoomResponse, localClientId: string) => Object\n  .entries(room.members)\n  .filter(([roomClientId]) => roomClientId !== localClientId)\n  .map(([, connectionId]) => connectionId)[0];\n\nconst Room = () => {\n  const {roomCode, connectionId, clientId} = useContext(appContext);\n  const history = useHistory();\n  const location = useLocation();\n\n  const [passwordError, setPasswordError] = useState(false);\n  const [isPrivateRoom, setPrivateRoom] = useState(false);\n  const [isLocalVideoLoaded, setLocalVideoLoaded] = useState(false);\n  const [isRemoteVideoLoaded, setRemoteVideoLoaded] = useState(false);\n  const [isRoomFetching, setRoomFetching] = useState(false);\n  const [isRoomOpener, setIsRoomOpener] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [remoteConnectionId, setRemoteConnectionId] = useState<string | null>(null);\n  const [localMediaStream, setLocalMediaStream] = useState<MediaStream | null>(null);\n  const [{isEntered}, _setEntered] = useQueryString(location, history.replace);\n  const setEntered = (isEntered: boolean) => _setEntered({isEntered})\n  const [webRTCUtil, setWebRTCUtil] = useState<WebRTCUtil>();\n\n  useEffect(() => {\n    const webRTCUtilIntance = new WebRTCUtil({\n      iceServerUrls: [\n        \"stun:stun.l.google.com:19302\",\n        \"stun:stun1.l.google.com:19302\",\n        \"stun:stun2.l.google.com:19302\",\n        \"stun:stun3.l.google.com:19302\",\n        \"stun:stun4.l.google.com:19302\",\n      ],\n      onDisconnect: () => setIsConnected(false),\n      onConnect: () => setIsConnected(true),\n      onError: handleError,\n    });\n    setWebRTCUtil(webRTCUtilIntance)\n    return () => webRTCUtilIntance.destroy();\n  }, [])\n\n  useEffect(() => {\n    if (!roomCode || !connectionId) return\n    const intervalId = setInterval(() => api.fetchRoom({roomCode, clientId, connectionId}), 60 * 1000);\n    return () => clearInterval(intervalId)\n  }, [roomCode, connectionId, isEntered, clientId])\n\n  useEffect(() => {\n    if (webRTCUtil && isEntered && localMediaStream) {\n      webRTCUtil.addLocalMediaStream(localMediaStream)\n    }\n  }, [isEntered, localMediaStream, webRTCUtil])\n\n  useEffect(() => {\n    if (webRTCUtil && isEntered && remoteConnectionId) {\n      webRTCUtil?.connect(remoteConnectionId)\n    }\n  }, [isRoomOpener, isEntered, remoteConnectionId, webRTCUtil])\n\n  const fetchRoom = useCallback(async ({roomCode, clientId, connectionId, password = ''}: {\n    roomCode: string,\n    clientId: string,\n    connectionId: string\n    password?: string\n  }) => {\n    if (!webRTCUtil) return;\n    setRoomFetching(true)\n    try {\n      const room = await api.fetchRoom({roomCode, clientId, connectionId, password});\n      const remoteConnectionId = getRemoteConnectionId(room, clientId);\n      if (remoteConnectionId) {\n        setRemoteConnectionId(remoteConnectionId)\n      } else {\n        setIsRoomOpener(true)\n      }\n    } finally {\n      setRoomFetching(false)\n    }\n  }, [webRTCUtil]);\n\n  useEffect(() => {\n    if (roomCode != null && webRTCUtil != null && connectionId != null) {\n      fetchRoom({roomCode, clientId, connectionId}).catch(e => {\n        console.log(e?.response?.data, ERRORS.ROOM_IS_FULL);\n        switch (e?.response?.status) {\n          case 403:\n            if (e?.response?.data === ERRORS.ROOM_IS_FULL) {\n              setTimeout(() => {\n                alert(\"이미 다른 사람이 접속한 방입니다.\")\n                history.push(\"/join\")\n              }, 400)\n              return;\n            } else {\n              setPrivateRoom(true);\n              return;\n            }\n          case 404:\n            setTimeout(() => {\n              alert(\"없는 방입니다.\")\n              history.push(\"/join\")\n            }, 400)\n            return;\n          default:\n            return handleError(e)\n        }\n      });\n    }\n  }, [clientId, connectionId, fetchRoom, history, roomCode, webRTCUtil])\n\n  return <>\n    <section className={classNames(\"room\", {entered: isEntered})}>\n      <Loading tag=\"main\" isLoading={isRoomFetching}>\n        <Loading isLoading={!isLocalVideoLoaded} className=\"local-video-container\">\n          <LocalVideo onLoad={mediaStream => {\n            setLocalVideoLoaded(true);\n            setLocalMediaStream(mediaStream)\n          }} muted/>\n        </Loading>\n        {\n          (isEntered && webRTCUtil && (\n            <Loading isLoading={!isRemoteVideoLoaded} className=\"remote-video-container\">\n              <RemoteVideo loading={!isConnected} mediaStream={webRTCUtil.remoteMediaStream}\n                           onLoad={() => setRemoteVideoLoaded(true)}/>\n            </Loading>\n          )) ||\n\n          (!isRoomFetching && <>\n            <CreateResult visible={isRoomOpener} onEnter={async () => {\n              if (!isLocalVideoLoaded) {\n                alert(\"비디오및 오디오 접근을 허용해주세요.\");\n                return;\n              }\n              setEntered(true);\n            }}/>\n\n            <JoinRoom visible={!isRoomOpener}\n                      needPassword={isPrivateRoom} passwordError={passwordError}\n                      onEnter={async password => {\n                        setPasswordError(false);\n                        if (roomCode != null && webRTCUtil != null && connectionId != null) {\n                          try {\n                            await fetchRoom({connectionId, clientId, roomCode, password})\n                            setEntered(true);\n                          } catch (e) {\n                            setPasswordError(true);\n                          }\n                        }\n                      }}/>\n          </>)\n        }\n      </Loading>\n      <footer>\n        <Advertisement/>\n      </footer>\n    </section>\n  </>;\n};\n\nexport default Room;","import './AppRoot.scss';\nimport React, {useContext, useEffect} from 'react';\nimport {direction, Popup} from \"../component/Transition\";\nimport FrontPage from \"./frontPage/FrontPage\";\nimport Join from \"./join/Join\";\nimport Create from \"./create/Create\";\nimport {BrowserRouter, Link, Redirect, Route, Switch, useParams} from \"react-router-dom\";\nimport Room from \"./room/Room\";\nimport {appContext, AppContext} from \"../App/AppStore\";\nimport {getConnectionId} from \"../infrastructure/message\";\nimport Loading from \"../component/Loading\";\n\nexport interface RoomParams {\n  code: string,\n}\n\nconst CodeHeader = ({transparent = true, back}: { transparent?: boolean, back?: string }) => {\n  const {code} = useParams<RoomParams>();\n  return (\n    <header className={`screen-header center ${transparent ? 'transparent' : ''}`}>\n      <div className=\"inner\">\n        {back && <Link className=\"back-navigation\" to={back}>〈</Link>}\n        <h1 key=\"header-title\">CODE : {code}</h1>\n      </div>\n    </header>\n  );\n};\n\nconst Header = () => (\n  <Switch>\n    <Route path=\"/\" exact>\n      <header className=\"screen-header center big\">\n        <div className=\"inner\">\n          <h1 className=\"app-title\" key=\"header-title\">Signal</h1>\n        </div>\n      </header>\n    </Route>\n    <Route path=\"/join\">\n      <header className=\"screen-header center\">\n        <div className=\"inner\">\n          <Link className=\"back-navigation\" to=\"/\">〈</Link>\n          <h1 key=\"header-title\">CODE 입력</h1>\n        </div>\n      </header>\n    </Route>\n    <Route path=\"/:code(\\d+)\">\n      <CodeHeader back=\"/\" transparent/>\n    </Route>\n    <Route exact path=\"/create\">\n      <header className=\"screen-header center\">\n        <div className=\"inner\">\n          <Link className=\"back-navigation\" to=\"/\">〈</Link>\n          <h1 key=\"header-title\">방 만들기</h1>\n        </div>\n      </header>\n    </Route>\n    <Redirect to=\"/\"/>\n  </Switch>\n);\n\nconst CodeSetter = () => {\n  const {setRoomCode} = useContext(appContext);\n  const {code} = useParams<RoomParams>();\n  useEffect(() => {\n    if (code) setRoomCode(code);\n    return () => setRoomCode(null);\n  }, [code, setRoomCode])\n  return null;\n}\n\nconst AppRoot = () => {\n  const {setConnectionId, connectionId} = useContext<AppContext>(appContext);\n\n  useEffect(() => {\n    getConnectionId().then(setConnectionId)\n  }, [setConnectionId])\n\n  return (\n    <Loading isLoading={!connectionId}>\n      {connectionId && (\n        <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n          <div className=\"App\">\n            <Header/>\n            <Popup path=\"/\" exact disableOnFirst from={direction.LEFT}>\n              <FrontPage/>\n            </Popup>\n            <Popup path=\"/join\" from={direction.RIGHT}>\n              <Join/>\n            </Popup>\n            <Popup path=\"/create\" from={direction.RIGHT}>\n              <Create/>\n            </Popup>\n            <Route path=\"/:code(\\d+)\" component={CodeSetter}/>\n            <Popup path=\"/:code(\\d+)\" from={direction.RIGHT}>\n              <Room/>\n            </Popup>\n          </div>\n        </BrowserRouter>\n      )}\n    </Loading>\n  );\n};\n\nexport default AppRoot;","import React from 'react';\nimport AppStore from \"./AppStore\";\nimport AppRoot from \"../view/AppRoot\";\n\n\nexport const App = () => (\n  <AppStore>\n    <AppRoot/>\n  </AppStore>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}